on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  REGISTRY: registry.naijavax.com
  SERVICE_NAME: testapi
  #   CHARTS_DIR: ./charts/
  ENVIRONMENT: development
  DEPLOYMENT_FILE: deploy.yaml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: echo "$REGISTRY/$SERVICE_NAME:$GITHUB_RUN_NUMBER"

      - uses: Azure/docker-login@v1
        with:
          login-server: $REGISTRY
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Docker Login
        run: docker login $REGISTRY -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}

#       - name: Docker Build
#         run: docker build . -t $REGISTRY/$SERVICE_NAME:$GITHUB_RUN_NUMBER

#       - name: Docker Push
#         run: docker push $REGISTRY/$SERVICE_NAME:$GITHUB_RUN_NUMBER
      
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      
      - name: Helm bake
        run: |
          mkdir ./output
          helm template --release-name $ENVIRONMENT charts --set release=$ENVIRONMENT --set fullnameOverride=$SERVICE_NAME --set nameOverride=$SERVICE_NAME --set image.repository=$REGISTRY/$SERVICE_NAME:$GITHUB_RUN_NUMBER > ./output/$DEPLOYMENT_FILE
      
      - name: Preview
        run: |
          ls
          cat $DEPLOYMENT_FILE
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          path: ./output

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.1
      
      - name: Preview 
        run: |
          ls
          cd ./artifact/output
          ls
      
#       - name: Deploy to cluster
#         uses: wahyd4/kubectl-helm-action@master
#         env:
#           KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
#         with:
#           args: kubectl apply -f .
      
#       - uses: Azure/k8s-set-context@v1
#         with:
#           kubeconfig: ${{ secrets.KUBE_CONFIG }}
      
#       - uses: Azure/k8s-deploy@v1
#         with:
#           manifests: ./artifact/output
